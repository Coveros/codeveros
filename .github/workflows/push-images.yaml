name: Build, Test, and Push Codeveros Service Images

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
env:
  node_version: 14.x
  REGISTRY: ghcr.io

jobs:
  build-node-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - context: services/auth-service/nodejs
            image_name: coveros/codeveros-auth-service
          - context: services/gateway/nodejs
            image_name: coveros/codeveros-gateway
          - context: services/training-service/nodejs
            image_name: coveros/codeveros-training-service
          - context: services/user-service/nodejs
            image_name: coveros/codeveros-user-service
          - context: services/ui/angular
            image_name: coveros/codeveros-ui
    defaults:
      run:
        working-directory: ${{ matrix.context }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Install NPM Dependencies
        run: npm ci --quiet

      - name: Lint Code
        run: npm run checkstyle:ci

      - name: Unit Test
        run: npm run test-ci

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image_name }}
          tags: |
            type=sha
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=edge


      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
